package com.loovjo.bloovtech;

import java.util.ArrayList;
import java.util.Arrays;

import net.minecraft.block.Block;
import net.minecraft.block.BlockOre;
import net.minecraft.block.BlockSapling;
import net.minecraft.block.material.Material;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.init.Blocks;
import net.minecraft.init.Items;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.oredict.OreDictionary;
import net.minecraftforge.oredict.ShapedOreRecipe;
import net.minecraftforge.oredict.ShapelessOreRecipe;

import com.loovjo.bloovtech.block.BlockCluster;
import com.loovjo.bloovtech.block.BlockCustomCraftingTable;
import com.loovjo.bloovtech.block.BlockEnergyBarrelTier1;
import com.loovjo.bloovtech.block.BlockEnergyTransferer;
import com.loovjo.bloovtech.block.BlockFastGrass;
import com.loovjo.bloovtech.block.BlockFireDynamo;
import com.loovjo.bloovtech.block.BlockGrassEater;
import com.loovjo.bloovtech.block.BlockInfuser;
import com.loovjo.bloovtech.block.BlockMagnetQuarry;
import com.loovjo.bloovtech.block.BlockOverpowerOre;
import com.loovjo.bloovtech.block.BlockPowerPipe;
import com.loovjo.bloovtech.block.BlockTurbine;
import com.loovjo.bloovtech.block.BlockWaterPump;
import com.loovjo.bloovtech.event.BloovEventHandler;
import com.loovjo.bloovtech.gui.BloovGuiHandler;
import com.loovjo.bloovtech.item.ItemElectricBag;
import com.loovjo.bloovtech.item.ItemGrassStabilizer;
import com.loovjo.bloovtech.item.ItemGrowthMedium;
import com.loovjo.bloovtech.item.ItemLawnMover;
import com.loovjo.bloovtech.item.ItemOverPower;
import com.loovjo.bloovtech.item.ItemPowerStone;
import com.loovjo.bloovtech.item.ItemSaw;
import com.loovjo.bloovtech.proxy.CommonProxy;
import com.loovjo.bloovtech.tileentity.TileEntityCustomCraftingTable;
import com.loovjo.bloovtech.tileentity.TileEntityEnergyBarrel;
import com.loovjo.bloovtech.tileentity.TileEntityEnergyTransferer;
import com.loovjo.bloovtech.tileentity.TileEntityFastGrass;
import com.loovjo.bloovtech.tileentity.TileEntityGrassEater;
import com.loovjo.bloovtech.tileentity.TileEntityInfuser;
import com.loovjo.bloovtech.tileentity.TileEntityMagnetQuarry;
import com.loovjo.bloovtech.tileentity.TileEntityPowerPipe;
import com.loovjo.bloovtech.tileentity.TileEntitySteamGenerator;
import com.loovjo.bloovtech.tileentity.TileEntityTurbine;
import com.loovjo.bloovtech.tileentity.TileEntityWaterPump;

import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.Mod.Instance;
import cpw.mods.fml.common.SidedProxy;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.network.NetworkRegistry;
import cpw.mods.fml.common.registry.GameRegistry;

@Mod(modid = BloovMain.MODID, version = BloovMain.VERSION)
public class BloovMain {
	public static final String MODID = "bloovtech";
	public static final String VERSION = "Pre-alpha 0.001";

	public static ArrayList<ItemOverPower> iOp = new ArrayList<ItemOverPower>();

	public static ArrayList<ArrayList<Object>> infuserRecipes = new ArrayList<ArrayList<Object>>();

	@Instance
	public static BloovMain instance;

	public static CreativeTabs bloovtab = new CreativeTabs("BloovTab") {

		@Override
		public Item getTabIconItem() {
			return Item.getItemFromBlock(blockPowerPipe);
		}
	};

	@SidedProxy(clientSide = "com.loovjo.bloovtech.proxy.ClientProxy", serverSide = "com.loovjo.bloovtech.proxy.CommonProxy")
	public static CommonProxy proxy;

	public static Block blockPowerPipe = new BlockPowerPipe(Material.rock)
			.setCreativeTab(bloovtab).setBlockName("powerPipe").setHardness(3);
	public static Block blockSteamGenerator = new BlockFireDynamo(Material.rock)
			.setBlockName("steamGenerator").setCreativeTab(bloovtab);
	public static Block blockWaterPump = new BlockWaterPump(Material.rock)
			.setBlockName("waterPump").setCreativeTab(bloovtab);
	public static Block blockMagnetQuarry = new BlockMagnetQuarry(Material.rock)
			.setCreativeTab(bloovtab).setBlockName("magnetQuarry");
	public static Block blockTurbine = new BlockTurbine(Material.rock)
			.setCreativeTab(bloovtab).setBlockName("turbine");
	public static Block blockEnergyBarrelTier1 = new BlockEnergyBarrelTier1(
			Material.wood).setCreativeTab(bloovtab)
			.setBlockName("energyBarrel").setHardness(100).setResistance(100);
	public static Block blockEnergyTransferer = new BlockEnergyTransferer(
			Material.rock).setCreativeTab(bloovtab).setBlockName(
			"energyTransferer");
	public static Block blockCluster = new BlockCluster(Material.rock)
			.setBlockName("cluster")
			.setBlockTextureName(BloovMain.MODID + ":blockCluster")
			.setCreativeTab(bloovtab).setHardness(20);
	public static Block blockOverPowerer = new BlockInfuser(Material.rock)
			.setBlockName("infuser").setCreativeTab(bloovtab);
	public static Block blockFastGrass = new BlockFastGrass(Material.grass)
			.setCreativeTab(bloovtab).setBlockTextureName("grass")
			.setBlockName("fastGrass");
	public static Block blockGrassEater = new BlockGrassEater(Material.ground)
			.setBlockName("grassEater")
			.setBlockTextureName(MODID + ":grassEater")
			.setCreativeTab(bloovtab);
	public static Block blockOverPowerOre = new BlockOverpowerOre(Material.rock).setCreativeTab(bloovtab).setBlockName("oreOverpower").setBlockTextureName("overpowerOre");
	
	
	public static ItemOverPower itemOverPowerIngot = (ItemOverPower) new ItemOverPower(
			20).setTextureName(MODID + ":overpowerium/0%")
			.setUnlocalizedName("overpoweringot").setCreativeTab(bloovtab);
	public static Item itemOverPowerium = new ItemOverPower(20)
			.setTextureName(MODID + ":overpowerium/20%")
			.setUnlocalizedName("overpowerium").setCreativeTab(bloovtab);
	public static Item itemPowerStone = new ItemPowerStone()
			.setCreativeTab(bloovtab).setTextureName(MODID + ":powerStone")
			.setUnlocalizedName("powerStone")
			.setMaxDamage(ItemPowerStone.powerMax);
	public static Item itemElectricBag = new ItemElectricBag()
			.setCreativeTab(bloovtab).setMaxStackSize(1)
			.setUnlocalizedName("electricBag")
			.setTextureName(MODID + ":electricbag");
	public static Item itemIronSaw = new ItemSaw()
			.setUnlocalizedName("ironSaw").setTextureName(MODID + ":ironSaw")
			.setMaxStackSize(1).setCreativeTab(bloovtab);
	public static Item itemSawBlade = new Item()
			.setUnlocalizedName("ironSawBlade")
			.setTextureName(MODID + ":ironSawBlade").setCreativeTab(bloovtab);
	public static Item itemSawBladeHolder = new Item()
			.setUnlocalizedName("ironSawBladeHolder").setCreativeTab(bloovtab)
			.setTextureName(MODID + ":ironSawBladeHolder");
	public static Item itemLawnMover = new ItemLawnMover()
			.setUnlocalizedName("lawnMover").setCreativeTab(bloovtab)
			.setTextureName(MODID + ":lawnMover");
	public static Item itemSkin = new Item().setUnlocalizedName("skin")
			.setCreativeTab(bloovtab).setTextureName(MODID + ":skin");
	public static Item itemGrowthMedium = new ItemGrowthMedium()
			.setUnlocalizedName("growthMedium")
			.setTextureName(MODID + ":growth_medium").setCreativeTab(bloovtab);
	public static Item itemGrassStabilizer = new ItemGrassStabilizer().setCreativeTab(bloovtab).setUnlocalizedName("grassStabilizer").setTextureName(MODID+":grassStabilizer");

	@EventHandler
	public void init(FMLInitializationEvent event) {
		proxy.registerRenderStuff();
		registerBlocks();
		registerTileEntities();
		registerItems();
		registerGuiStuff();
		registerCrafting();
		registerCraftingTables(Blocks.stone, Blocks.planks, Blocks.stonebrick,
				Blocks.dirt, Blocks.sand);
		registerOverPoverium();
		registerInfuserRecipes();
		registerSmelting();
		MinecraftForge.EVENT_BUS.register(new BloovEventHandler());
	}

	private void registerSmelting() {
		GameRegistry.addSmelting(blockOverPowerOre, new ItemStack(itemOverPowerIngot), 20);
	}

	private void registerInfuserRecipes() {
	}

	private void registerOverPoverium() {
		Item lastItem = itemOverPowerIngot;
		for (int i = 4; i < 20; i += 4) {
			ItemOverPower item = (ItemOverPower) new ItemOverPower(i)
					.setTextureName(MODID + ":overpowerium/" + i + "%")
					.setUnlocalizedName("op" + i).setCreativeTab(bloovtab);
			GameRegistry.registerItem(item, "overpowerium" + i + "%");
			// System.out.println(lastItem + ": " + item);
			GameRegistry.addShapelessRecipe(new ItemStack(item, 4),
					new Object[] { lastItem, lastItem, lastItem, lastItem,
							lastItem, lastItem, lastItem, lastItem });
			GameRegistry.addShapelessRecipe(new ItemStack(lastItem, 8),
					new Object[] { item, item, item, item });
			lastItem = item;
			iOp.add(item);
		}
		Item item = itemOverPowerium;
		GameRegistry.addShapelessRecipe(new ItemStack(item, 1), new Object[] {
				lastItem, lastItem, lastItem, lastItem, lastItem, lastItem,
				lastItem, lastItem });
		GameRegistry.addShapelessRecipe(new ItemStack(lastItem, 8),
				new Object[] { item });
		iOp.add((ItemOverPower) item);

	}

	private void registerInfuserRecipe(ItemStack result, Object... recipe) {
		infuserRecipes.add(new ArrayList<Object>(Arrays.asList(new Object[] {
				result, recipe })));
	}

	private void registerCrafting() {
		GameRegistry
				.addShapelessRecipe(new ItemStack(blockCluster), new Object[] {
						Blocks.iron_block, Blocks.coal_block,
						Blocks.diamond_block, Blocks.emerald_block,
						Blocks.redstone_block, Blocks.lapis_block,
						Blocks.gold_block, Items.slime_ball, Items.slime_ball });
		GameRegistry.addShapedRecipe(new ItemStack(blockMagnetQuarry), "ccc",
				"crc", "ctc", 'c', blockCluster, 'r', Blocks.redstone_block,
				't', Blocks.tnt);
		GameRegistry.addRecipe(new ItemStack(itemIronSaw), "b ", " h", 'b',
				itemSawBlade, 'h', itemSawBladeHolder);
		GameRegistry.addRecipe(new ItemStack(itemSawBlade), " i ", " i ",
				"ii ", 'i', Items.iron_ingot);
		GameRegistry.addRecipe(new ItemStack(itemSawBladeHolder), " c ", "c c",
				"csc", 'c', Blocks.cobblestone, 's', Items.stick);

		OreDictionary.registerOre("skullSkeleton", Items.skull);
		OreDictionary.registerOre("skull", new ItemStack(Items.skull, 1, 1));
		OreDictionary.registerOre("skull", new ItemStack(Items.skull, 1, 2));
		OreDictionary.registerOre("head", new ItemStack(Items.skull, 1, 3));

		GameRegistry.addRecipe(new ShapelessOreRecipe(getHeadFromPlayer(""),
				itemSkin, itemSkin, itemSkin, "skullSkeleton"));

		GameRegistry.addRecipe(new ShapedOreRecipe(getHeadFromPlayer("loovjo"),
				"drd", "ghg", "oso", 'd', Items.diamond, 'r',
				Blocks.redstone_block, 'g', Items.golden_apple, 'h', "head",
				'o', Blocks.obsidian, 's', Items.nether_star));

		GameRegistry.addRecipe(new ShapelessOreRecipe(
				new ItemStack(Items.skull), "dyeWhite", "skull"));

	}

	public static ItemStack getHeadFromPlayer(String playerName) {
		ItemStack itemstack = new ItemStack(Items.skull);
		itemstack.setItemDamage(3);
		if (playerName != "") {
			itemstack.setTagCompound(new NBTTagCompound());
			itemstack.getTagCompound().setString("SkullOwner", playerName);
		}
		return itemstack;
	}

	private void registerCraftingTables(Block... types) {
		for (Block type : types) {
			Block b = new BlockCustomCraftingTable(type)
					.setCreativeTab(bloovtab).setBlockName(type.getUnlocalizedName()+"ct");
			GameRegistry.registerBlock(b,
					"crafting_table_" + type.getUnlocalizedName().substring(5))
					.getLocalizedName();
			GameRegistry.registerTileEntity(
					TileEntityCustomCraftingTable.class,
					MODID + ":cct" + type.getUnlocalizedName());

			GameRegistry.addRecipe(new ItemStack(b), " a ", "ibi", " a ", 'a',
					Items.iron_axe, 'b', type, 'i', itemIronSaw);

		}
	}

	private void registerGuiStuff() {
		NetworkRegistry.INSTANCE.registerGuiHandler(BloovMain.instance,
				new BloovGuiHandler());
	}

	private void registerItems() {
		GameRegistry.registerItem(itemElectricBag, "electricBag");
		GameRegistry.registerItem(itemPowerStone, "powerStone");
		GameRegistry.registerItem(itemOverPowerIngot, "overpoweringot");
		GameRegistry.registerItem(itemOverPowerium, "overpowerium");
		GameRegistry.registerItem(itemIronSaw, "ironSaw");
		GameRegistry.registerItem(itemSawBlade, "ironSawBlade");
		GameRegistry.registerItem(itemSawBladeHolder, "sawBladeHolder");
		GameRegistry.registerItem(itemLawnMover, "lawnMover");
		GameRegistry.registerItem(itemSkin, "skin");
		GameRegistry.registerItem(itemGrowthMedium, "growthMedium");
		GameRegistry.registerItem(itemGrassStabilizer, "grassStabilizer");
	}

	private void registerTileEntities() {
		GameRegistry.registerTileEntity(TileEntityPowerPipe.class, MODID
				+ ":powerPipe");
		GameRegistry.registerTileEntity(TileEntitySteamGenerator.class, MODID
				+ ":fireDynamo");
		GameRegistry.registerTileEntity(TileEntityWaterPump.class, MODID
				+ "waterPump");
		GameRegistry.registerTileEntity(TileEntityMagnetQuarry.class, MODID
				+ ":magnetQuarry");
		GameRegistry.registerTileEntity(TileEntityTurbine.class, MODID
				+ ":steam2p");
		GameRegistry.registerTileEntity(TileEntityEnergyBarrel.class, MODID
				+ ":energyBarrel");
		GameRegistry.registerTileEntity(TileEntityEnergyTransferer.class, MODID
				+ ":energyTransferer");
		GameRegistry.registerTileEntity(TileEntityInfuser.class, MODID
				+ ":infuser");
		GameRegistry.registerTileEntity(TileEntityFastGrass.class, MODID
				+ ":fastGrass");
		GameRegistry.registerTileEntity(TileEntityGrassEater.class, MODID
				+ ":grassEater");
	}

	private void registerBlocks() {
		GameRegistry.registerBlock(blockPowerPipe, "powerPipe");
		GameRegistry.registerBlock(blockSteamGenerator, "fireDynamo");
		GameRegistry.registerBlock(blockWaterPump, "waterPump");
		GameRegistry.registerBlock(blockMagnetQuarry, "magnetQuarry");
		GameRegistry.registerBlock(blockCluster, "blockCluster");
		GameRegistry.registerBlock(blockTurbine, "steam2power");
		GameRegistry.registerBlock(blockEnergyBarrelTier1, "energybarreltier1");
		GameRegistry.registerBlock(blockEnergyTransferer, "energyTransferer");
		GameRegistry.registerBlock(blockOverPowerer, "infuser");
		GameRegistry.registerBlock(blockFastGrass, "fastGrass");
		GameRegistry.registerBlock(blockGrassEater, "grassEater");
		GameRegistry.registerBlock(blockOverPowerOre, "overpowerOre");
	}
}
