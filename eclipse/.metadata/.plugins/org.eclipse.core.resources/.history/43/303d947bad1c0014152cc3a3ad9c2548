package com.loovjo.bloovtech.item;

import net.minecraft.block.Block;
import net.minecraft.enchantment.EnchantmentHelper;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.init.Blocks;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.world.World;

public class ItemSaw extends Item {
	public int blocksLalled, maxLalled = 2000;

	public void mineBlock(World world, int x, int y, int z, int meta,
			EntityPlayer player, Block block) {
		if (!world.isRemote) {
			// Workaround for dropping experience
			boolean silktouch = EnchantmentHelper.getSilkTouchModifier(player);
			int fortune = EnchantmentHelper.getFortuneModifier(player);
			int exp = block.getExpDrop(world, meta, fortune);

			block.onBlockHarvested(world, x, y, z, meta, player);
			if (block.removedByPlayer(world, player, x, y, z, true)) {
				block.onBlockDestroyedByPlayer(world, x, y, z, meta);
				block.harvestBlock(world, player, x, y, z, meta);
				// Workaround for dropping experience
				if (!silktouch)
					block.dropXpOnBlockBreak(world, x, y, z, exp);
			}
		} else {
			block.onBlockDestroyedByPlayer(world, x, y, z, meta);
		}
	}

	public boolean onSecondUse(ItemStack is, EntityPlayer player, World world,
			int x, int y, int z) {
		// System.out.println(x + " " + y + " " + z);
		if (world.getBlock(x, y, z) == Blocks.log
				|| world.getBlock(x, y, z) == Blocks.leaves) {
			world.getBlock(x, y, z).onBlockDestroyedByPlayer(world, x, y, z,
					world.getBlockMetadata(x, y, z));

			world.setBlock(x, y, z, Blocks.air);
			for (int i = -1; i < 2; i++) {
				for (int j = -1; j < 2; j++) {
					if (blocksLalled < maxLalled) {
						if (onSecondUse(is, player, world, x + i, y, z + j))
							blocksLalled++;
						if (onSecondUse(is, player, world, x + i, y + 1, z + j))
							blocksLalled++;
					}
				}
			}

			return true;
		}
		return false;
	}

	@Override
	public boolean onItemUse(ItemStack is, EntityPlayer player, World world,
			int x, int y, int z, int par7, float par8, float par9, float par10) {
		blocksLalled = 0;
		maxLalled = 2000;
		return onSecondUse(is, player, world, x, y, z);
	}
}
